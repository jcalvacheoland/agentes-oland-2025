generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  accounts      Account[]
  Authenticator Authenticator[]
  sessions      Session[]
  cotizaciones  cotizaciones[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Authenticator {
  credentialID         String  @unique
  userId               String
  providerAccountId    String
  credentialPublicKey  String
  counter              Int
  credentialDeviceType String
  credentialBackedUp   Boolean
  transports           String?
  user                 User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, credentialID])
}

model cotizaciones {
  id             String   @id @default(cuid())
  userId         String
  plate          String
  submodelEqui   Int
  brand          String
  model          String
  year           Int
  vehicleValue   Float
  type           String
  subtype        String?
  extras         Int      @default(0)
  newVehicle     Int      @default(0)
  useOfVehicle   String?
  city           String?
  identification String?
  name           String?
  firstLastName  String?
  secondLastName String?
  gender         String?
  civilStatus    String?
  birthdate      String?
  age            String?
  cityCodeMapfre Int?
  status         String   @default("draft")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  bitrixDealId   String?  @unique
  chubb_mm       String?
  User           User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([bitrixDealId])
  @@index([userId])
}
